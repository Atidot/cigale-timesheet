the knockout API could be so. much. nicer... i think it needs operators and also a typeclass for Observable and ObservableList.
Obviously for the typeclass, for now Fay doesn't support it...

remove lib/ folder and instead install JS dependencies using NPM?

should be able to make parseDateTime in Hg.hs and surely elsewhere too nicer by using parsec's parseNatural:
Text.Parsec.Token
Also can get rid of Util.parsedToInteger and parsedToInt..

I avoided the problem of heteregenous lists by putting in the module data types the Value (IIRC) therefore tying me to Aeson.
Here he talks about RankNTypes and foreach to achieve the same result:
http://ocharles.org.uk/blog/posts/2013-07-26-a-comparison-between-perl-and-haskell.html
Consider that solution instead.

maybe use the async library to fetch from all sources concurrently instead of sequentially.

cancel button in the loading throbber. especially when we first launch the app, it starts fetching for today and i don't care about that, i want data for 1 month ago.. I'm waiting for nothing.

bootstrap date picker instead of jquery-ui?

try to get JS functions getKeys and toJsObject in my Utils.hs as inline in FFI to avoid to depend on the HTML source.

quoted-printable ==> _ should not be translated to space, that applies only to message subject!

probably animated throbber.

for git, an optional diff would be nice too...

could use the favicon to display progress when fetching, if i won't manage to speed up the fetching enough: https://github.com/tommoor/tinycon

emails:
display attachments list (name+mimetype) -> probably use this to return images: http://stackoverflow.com/a/10802497/516188 the server returns a JSON describing the data to display, with main HTML and image attachments directly in that JSON, then the client builds the display. But for that I must change the Event definition, to add the possibility of attachments...

so that the app stops when the browser tab is closed, have the client send periodical ping (heartbeat) and have the server commit suicide if not receiving it some time.

waste of vertical space due to the calendar. maybe move to read-only text containing the full date time (Tuesday, 10 September,
2013), and pop-calendar, or use that space for statistics about the day (first event at: last event at: total duration: )

i made my own system for configuration but i think this might document a similar and probably better approach? to check: https://www.fpcomplete.com/user/thoughtpolice/using-reflection http://www.reddit.com/r/haskell/comments/1l9qzw/reflecting_values_to_types_and_back/

store passwords using gnome-keyring on linux?

for the config, if I make some smart TH then let's also have it call the
aeson json functions generations, and then modules are not directly tied
to aeson anymore

migrate to scotty instead of snap? https://github.com/xich/scotty

decent error message if the config file is corrupted?

remove Util.toStrict1 once I can migrate to bytestring 0.10 (I think ghc 7.6)

new sources: firefox google searches, maybe stackoverflow upvotes/questions, dropbox subfolder
activity, google docs?
for firefox google searches: https://developer.mozilla.org/en-US/docs/The_Places_database
